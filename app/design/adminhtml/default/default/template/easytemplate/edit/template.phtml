<?php /** @var $this Webguys_Easytemplate_Block_Adminhtml_Cms_Page_Edit_Tab_Templates_Template */ ?>

<?php /** @var $this Webguys_Easytemplate_Block_Adminhtml_Cms_Page_Edit_Tab_Templates */ ?>

<div class="entry-edit page-templates">
    <?php if (!$this->isInTemplateMode()) : ?>
        <div id="dynamic-template-warrning">
            <ul class="messages">
                <li class="error-msg">
                    <ul>
                        <li><?php echo $this->__('Page output is not set to templates - template content will not be available on frontend') ?></li>
                    </ul>
                </li>
            </ul>
        </div>
    <?php endif; ?>

    <div class="entry-edit-head">
        <h4><?php echo Mage::helper('easytemplate')->__('Page Templates') ?></h4>
        <div class="right">
            <button style="" onclick="$('page_template_selector').show();" class="scalable add" type="button" title="Add New Template"><span><span><span>Add New Template</span></span></span></button>
        </div>
    </div>

    <div id="page_template_selector" style="display: none;">
        <?php echo $this->getChildHtml('selection'); ?>
    </div>
    <div style="clear:both;"></div>


    <div id="page_templates_container" class="box">
        <div id="page_templates_container_top"></div>
        <?php echo $this->getExistingTemplatesHtml(); ?>
    </div>

    <script type="text/javascript">
        // <![CDATA[
        function useEasyTemplate() {
            $('page_content').addClassName('ignore-validate');
            $('page_tabs_content_section').hide();
        }

        function sortableUpdate() {
            var i = 1;
            $$('#page_templates_container div').each(function(c){
                if(c.hasClassName('template-box') && !c.hasClassName('no-display')) {
                    $( c.id + '_sort_order').value = i;
                    i++;
                }
            });
        }

        Sortable.create("page_templates_container", {
            tag: 'div',
            treeTag: 'div',
            onUpdate: sortableUpdate
        });

        document.observe("dom:loaded", function() {
            $('edit_form').writeAttribute('enctype', 'multipart/form-data');
            if ($('page_view_mode').value == 'easytemplate') {
                useEasyTemplate();
            }
        });
        // ]]>
    </script>

    <script type="text/javascript">
        //<![CDATA[
        var templates = <?php echo json_encode( $this->getEmptyTemplates() ); ?>
        //]]>
    </script>

    <script type="text/javascript">
        //<![CDATA[

        var pageTemplate = {
            div : $('page_templates_container_top'),
            templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
            itemCount : 1,
            add : function( code ) {

                data = {};
                data.id  = 'new_' + this.itemCount;
                data.code = code;
                data.name = code; // TODO


                if ( template = templates[code] ) {

                    this.secondTemplate = new Template(template, this.templateSyntax);

                    var content = this.secondTemplate.evaluate(data);
                    Element.insert(this.div, {'after':content});

                    content.evalScripts();

                }
                $('page_template_selector').hide();
                sortableUpdate();
                useEasyTemplate();

                // TODO: Remove duplicate logic here and in box.phtml
                $('template_content_' + data.id).show();
                $('template_overview_' + data.id).hide();

                this.itemCount++;
                this.bindRemoveButtons();
                this.bindDateTimeChangeEvents();
            },
            remove : function(event){
                var element = $(Event.findElement(event, 'div.template-box'));
                if(element){
                    $(element.readAttribute('id')+'_'+'is_delete').value = '1';
                    element.addClassName('no-display');
                    element.addClassName('ignore-validate');
                    element.hide();
                }
                sortableUpdate();
            },
            dateTimeChanged : function(event){

                var dateTimeTarget = null;
                var sourceElement = event.srcElement;
                var sourceId = sourceElement.readAttribute('id');

                if (sourceId.indexOf('from') > -1) {
                    dateTimeTarget = 'span.valid-from';
                } else if (sourceId.indexOf('to') > -1) {
                    dateTimeTarget = 'span.valid-to';
                }

                var element = $(Event.findElement(event, 'div.template-box'));
                if(dateTimeTarget && element){
                    element.down(dateTimeTarget).update(sourceElement.value);
                }
            },
            bindRemoveButtons : function(){
                var buttons = $$('div.page-templates .delete-page-template');
                for(var i=0;i<buttons.length;i++){
                    if(!$(buttons[i]).binded){
                        $(buttons[i]).binded = true;
                        Event.observe(buttons[i], 'click', this.remove.bind(this));
                    }
                }
            },
            bindDateTimeChangeEvents : function(){
                var inputFields = $$('div.page-templates input.datetime-input')
                for(var i=0;i<inputFields.length;i++){
                    if(!$(inputFields[i]).binded){
                        $(inputFields[i]).binded = true;
                        Event.observe(inputFields[i], 'change', this.dateTimeChanged.bind(this));
                    }
                }
            }
        }

        pageTemplate.bindRemoveButtons();
        pageTemplate.bindDateTimeChangeEvents();

        //]]>
    </script>

</div>

<script type="text/javascript">
    // re-bind form elements onchange
    varienWindowOnload(true);
</script>
